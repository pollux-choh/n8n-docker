networks:
  proxy:
    name: proxy

services:
  traefik:
    image: traefik:v3.2
    container_name: traefik
    restart: always
    command:
      - "--log.level=DEBUG"
      - "--api.dashboard=true" # 대시보드 활성화
      - "--api.insecure=true"  # HTTP로 대시보드 접근 허용
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"  # HTTPS 엔드포인트 추가
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"               # letsencrypt로 자동으로 acme로 인증서 받아옴
      - "--certificatesresolvers.myresolver.acme.email=${ADMIN_EMAIL}"            # letsencrypt로 인증서를 받을때 admin email 지정
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"  # letsencrypt 인증서 파일
    ports:
      - 80:80
      - 443:443
      - 8080:8080 # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt  # 인증서 저장 위치
    labels:
      - traefik.enable=true
    networks:
      - proxy

  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    environment:
      - N8N_EDITOR_BASE_URL="https://${NGROK_DOMAIN_NAME}/n8n"
      - N8N_ENDPOINT_REST=rest 
      - N8N_PATH=/n8n
      - WEBHOOK_URL="https://${NGROK_DOMAIN_NAME}/n8n/"
      - GENERIC_TIMEZONE=Asia/Seoul
      - TZ=Asia/Seoul
    volumes:
      - n8n_data:/home/node/.n8n
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=PathPrefix(`/n8n`)"
      - "traefik.http.routers.n8n.middlewares=n8n-strip-prefix"
      - "traefik.http.middlewares.n8n-strip-prefix.stripprefix.prefixes=/n8n"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
    networks:
      - proxy


  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    ports:
      - "4040:4040" # ngrok dashboard
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN} # Use the token from .env file
      - NGROK_REGION=us # or your preferred region (e.g., eu, ap, au)
    command: 
      - "http"
      - "--log=stdout"
      - "--log-level=debug"
      - "--host-header=localhost"
      - "--url=${NGROK_DOMAIN_NAME}"
      - "traefik:80"
    networks:
      - proxy
    depends_on:
      - traefik

  fastapi-app:
    image: fastapi-app:latest
    container_name: fastapi-app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi-app.rule=PathPrefix(`/fastapi-app`) || PathPrefix(`/fastapi-app/`)"
      - "traefik.http.routers.fastapi-app.middlewares=fastapi-app-strip"
      - "traefik.http.middlewares.fastapi-app-strip.stripprefix.prefixes=/fastapi-app"
      - "traefik.http.services.fastapi-app.loadbalancer.server.port=8000"
    networks:
      - proxy

  whoami:
    image: traefik/whoami
    container_name: whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=PathPrefix(`/whoami`)"
    networks:
      - proxy 

volumes:
  n8n_data:
    external: true
